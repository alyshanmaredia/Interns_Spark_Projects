{"ast":null,"code":"var _jsxFileName = \"/home/alyshanmaredia/Desktop/dashboard/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport WidgetText from \"./WidgetText\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport WidgetBar from \"./WidgetBar\";\nimport WidgetDoughnut from \"./WidgetDoughnut\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme); //excel import\n\nconst config = {\n  apiKey: \"AIzaSyDMu-Vw30ykPPmFT3cXeunzKEi4EahzglI\",\n  spreadsheetId: \"1vcDPrMexD8bxNwwzK9IxF8wch6Hfezq2eooJACDiqgg\"\n};\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dropdownOption: []\n    };\n  }\n\n  getData() {}\n\n  componentDidMount() {\n    fetch(url).then(response => response.json()).then(data => {\n      let batchRowValues = data.valueRanges[0].values;\n      const rows = [];\n\n      for (let i = 1; i < batchRowValues.length; i++) {\n        let rowObject = {};\n\n        for (let j = 0; j < batchRowValues[i].length; j++) {\n          rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n        }\n\n        rows.push(rowObject);\n      } //dropdown options\n\n\n      let dropdownOptions = [];\n\n      for (let i = 0; i < rows.length; i++) {\n        dropdownOptions.push(rows[i].month);\n      }\n\n      dropdownOptions = Array.from(new Set(dropdownOptions)).reverse();\n      this.setState({\n        items: rows,\n        dropdownOptions: dropdownOptions,\n        selectedValue: \"Jan 2018\"\n      }, () => this.getData(\"Jan 2018\"));\n    });\n  }\n\n  render() {\n    const chartData = [{\n      label: \"Venezuela\",\n      value: \"290\"\n    }, {\n      label: \"Saudi\",\n      value: \"260\"\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(WidgetBar, {\n      title: \"Title\",\n      data: chartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WidgetDoughnut, {\n      title: \"Doughnut\",\n      data: chartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      options: options,\n      onChange: this._onSelect,\n      value: defaultOption,\n      placeholder: \"Select an option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/alyshanmaredia/Desktop/dashboard/src/components/Dashboard.js"],"names":["React","Component","Col","Row","Container","WidgetText","ReactFC","FusionCharts","Column2D","FusionTheme","WidgetBar","WidgetDoughnut","Dropdown","fcRoot","config","apiKey","spreadsheetId","url","Dashboard","constructor","state","dropdownOption","getData","componentDidMount","fetch","then","response","json","data","batchRowValues","valueRanges","values","rows","i","length","rowObject","j","push","dropdownOptions","month","Array","from","Set","reverse","setState","items","selectedValue","render","chartData","label","value","options","_onSelect","defaultOption"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport WidgetText from \"./WidgetText\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport WidgetBar from \"./WidgetBar\";\nimport WidgetDoughnut from \"./WidgetDoughnut\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n//excel import\nconst config = {\n  apiKey: \"AIzaSyDMu-Vw30ykPPmFT3cXeunzKEi4EahzglI\",\n  spreadsheetId: \"1vcDPrMexD8bxNwwzK9IxF8wch6Hfezq2eooJACDiqgg\",\n};\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dropdownOption: [],\n    };\n  }\n  getData() {}\n  componentDidMount() {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        let batchRowValues = data.valueRanges[0].values;\n\n        const rows = [];\n\n        for (let i = 1; i < batchRowValues.length; i++) {\n          let rowObject = {};\n          for (let j = 0; j < batchRowValues[i].length; j++) {\n            rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n          }\n          rows.push(rowObject);\n        }\n\n        //dropdown options\n        let dropdownOptions = [];\n\n        for (let i = 0; i < rows.length; i++) {\n          dropdownOptions.push(rows[i].month);\n        }\n        dropdownOptions = Array.from(new Set(dropdownOptions)).reverse();\n        this.setState(\n          {\n            items: rows,\n            dropdownOptions: dropdownOptions,\n            selectedValue: \"Jan 2018\",\n          },\n          () => this.getData(\"Jan 2018\")\n        );\n      });\n  }\n  render() {\n    const chartData = [\n      {\n        label: \"Venezuela\",\n        value: \"290\",\n      },\n      {\n        label: \"Saudi\",\n        value: \"260\",\n      },\n    ];\n\n    return (\n      <div>\n        <WidgetBar title=\"Title\" data={chartData} />\n        <WidgetDoughnut title=\"Doughnut\" data={chartData} />\n        <Dropdown\n          options={options}\n          onChange={this._onSelect}\n          value={defaultOption}\n          placeholder=\"Select an option\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}