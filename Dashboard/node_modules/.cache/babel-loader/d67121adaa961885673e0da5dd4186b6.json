{"ast":null,"code":"var _jsxFileName = \"/home/alyshanmaredia/Desktop/dashboard/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport WidgetText from \"./WidgetText\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport WidgetBar from \"./WidgetBar\";\nimport WidgetDoughnut from \"./WidgetDoughnut\";\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme); //excel import\n\nconst config = {\n  apiKey: \"AIzaSyDMu-Vw30ykPPmFT3cXeunzKEi4EahzglI\",\n  spreadsheetId: \"1vcDPrMexD8bxNwwzK9IxF8wch6Hfezq2eooJACDiqgg\"\n};\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {\n    fetch(url).then(response => response.json()).then(data => {\n      let batchRowValues = data.valueRanges[0].values;\n      const rows = [];\n\n      for (let i = 1; i < batchRowValues.length; i++) {\n        let rowObject = {};\n\n        for (let j = 0; j < batchRowValues[i].length; j++) {\n          rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n        }\n\n        rows.push(rowObject);\n      }\n    });\n  }\n\n  render() {\n    const chartData = [{\n      label: \"Venezuela\",\n      value: \"290\"\n    }, {\n      label: \"Saudi\",\n      value: \"260\"\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(WidgetBar, {\n      title: \"Title\",\n      data: chartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WidgetDoughnut, {\n      title: \"Doughnut\",\n      data: chartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/alyshanmaredia/Desktop/dashboard/src/components/Dashboard.js"],"names":["React","Component","Col","Row","Container","WidgetText","ReactFC","FusionCharts","Column2D","FusionTheme","WidgetBar","WidgetDoughnut","fcRoot","config","apiKey","spreadsheetId","url","Dashboard","constructor","componentDidMount","fetch","then","response","json","data","batchRowValues","valueRanges","values","rows","i","length","rowObject","j","push","render","chartData","label","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,iBAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEAL,OAAO,CAACM,MAAR,CAAeL,YAAf,EAA6BC,QAA7B,EAAuCC,WAAvC,E,CACA;;AACA,MAAMI,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,aAAa,EAAE;AAFF,CAAf;AAIA,MAAMC,GAAG,GAAI,iDAAgDH,MAAM,CAACE,aAAc,0DAAyDF,MAAM,CAACC,MAAO,EAAzJ;;AAEA,MAAMG,SAAN,SAAwBhB,SAAxB,CAAkC;AAChCiB,EAAAA,WAAW,GAAG;AACZ;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACGK,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,UAAIC,cAAc,GAAGD,IAAI,CAACE,WAAL,CAAiB,CAAjB,EAAoBC,MAAzC;AAEA,YAAMC,IAAI,GAAG,EAAb;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAAc,CAACK,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,YAAIE,SAAS,GAAG,EAAhB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,cAAc,CAACI,CAAD,CAAd,CAAkBC,MAAtC,EAA8CE,CAAC,EAA/C,EAAmD;AACjDD,UAAAA,SAAS,CAACN,cAAc,CAAC,CAAD,CAAd,CAAkBO,CAAlB,CAAD,CAAT,GAAkCP,cAAc,CAACI,CAAD,CAAd,CAAkBG,CAAlB,CAAlC;AACD;;AACDJ,QAAAA,IAAI,CAACK,IAAL,CAAUF,SAAV;AACD;AACF,KAdH;AAeD;;AACDG,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,CAChB;AACEC,MAAAA,KAAK,EAAE,WADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADgB,EAKhB;AACED,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KALgB,CAAlB;AAWA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAyB,MAAA,IAAI,EAAEF,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAC,UAAtB;AAAiC,MAAA,IAAI,EAAEA,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAvC+B;;AA0ClC,eAAelB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport WidgetText from \"./WidgetText\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport WidgetBar from \"./WidgetBar\";\nimport WidgetDoughnut from \"./WidgetDoughnut\";\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n//excel import\nconst config = {\n  apiKey: \"AIzaSyDMu-Vw30ykPPmFT3cXeunzKEi4EahzglI\",\n  spreadsheetId: \"1vcDPrMexD8bxNwwzK9IxF8wch6Hfezq2eooJACDiqgg\",\n};\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n  }\n  componentDidMount() {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        let batchRowValues = data.valueRanges[0].values;\n\n        const rows = [];\n\n        for (let i = 1; i < batchRowValues.length; i++) {\n          let rowObject = {};\n          for (let j = 0; j < batchRowValues[i].length; j++) {\n            rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n          }\n          rows.push(rowObject);\n        }\n      });\n  }\n  render() {\n    const chartData = [\n      {\n        label: \"Venezuela\",\n        value: \"290\",\n      },\n      {\n        label: \"Saudi\",\n        value: \"260\",\n      },\n    ];\n\n    return (\n      <div>\n        <WidgetBar title=\"Title\" data={chartData} />\n        <WidgetDoughnut title=\"Doughnut\" data={chartData} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}