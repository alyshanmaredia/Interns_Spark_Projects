{"ast":null,"code":"var _jsxFileName = \"/home/alyshanmaredia/Desktop/dashboard/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport WidgetBar from \"./WidgetBar\";\nimport WidgetDoughnut from \"./WidgetDoughnut\";\nimport Dropdown from \"react-dropdown\";\nimport WidgetText from \"./WidgetText\";\nimport \"react-dropdown/style.css\";\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme); //excel import\n\nconst config = {\n  apiKey: \"AIzaSyDMu-Vw30ykPPmFT3cXeunzKEi4EahzglI\",\n  spreadsheetId: \"1vcDPrMexD8bxNwwzK9IxF8wch6Hfezq2eooJACDiqgg\"\n};\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n\n    this.getData = arg => {\n      const arr = this.state.items;\n      const arrLen = arr.length;\n      let organicSource = 0;\n      let directSource = 0;\n      let selectedValue = null;\n      let newUsers = 0;\n      let users = 0;\n      let pageViews = 0;\n      let referralSource = 0;\n\n      for (let i = 0; i < arrLen; i++) {\n        if (arg == arr[i][\"month\"]) {\n          organicSource = arr[i].organic_source;\n          directSource = arr[i].direct_source;\n          referralSource = arr[i].referral_source;\n          pageViews = arr[i].page_views;\n          users = arr[i].users;\n          newUsers = arr[i].new_users;\n        }\n      }\n\n      selectedValue = arg;\n      this.setState({\n        organicSource: organicSource,\n        directSource: directSource,\n        referralSource: referralSource,\n        pageViews: pageViews,\n        users: users,\n        newUsers: newUsers\n      }, () => {\n        console.log(this.state.organicSource);\n      });\n    };\n\n    this.updateDashboard = event => {\n      this.getData(event.value);\n      this.setState({\n        selectedValue: event.value\n      }, () => {\n        console.log(this.state.organicSource);\n      });\n    };\n\n    this.state = {\n      items: [],\n      dropdownOption: [],\n      selectedValue: null,\n      organicSource: null,\n      directSource: null,\n      referralSource: null,\n      pageViews: null,\n      users: null,\n      newUsers: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(url).then(response => response.json()).then(data => {\n      let batchRowValues = data.valueRanges[0].values;\n      const rows = [];\n\n      for (let i = 1; i < batchRowValues.length; i++) {\n        let rowObject = {};\n\n        for (let j = 0; j < batchRowValues[i].length; j++) {\n          rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n        }\n\n        rows.push(rowObject);\n      } //dropdown options\n\n\n      let dropdownOptions = [];\n\n      for (let i = 0; i < rows.length; i++) {\n        dropdownOptions.push(rows[i].month);\n      }\n\n      dropdownOptions = Array.from(new Set(dropdownOptions)).reverse();\n      this.setState({\n        items: rows,\n        dropdownOptions: dropdownOptions,\n        selectedValue: \"Jan 2018\"\n      }, () => this.getData(\"Jan 2018\"));\n    });\n  }\n\n  render() {\n    const chartData = [{\n      label: \"Venezuela\",\n      value: \"290\"\n    }, {\n      label: \"Saudi\",\n      value: \"260\"\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"TopHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"Dashboard\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      options: this.state.dropdownOptions,\n      onChange: this.updateDashboard,\n      value: this.state.selectedValue,\n      placeholder: \"Select an option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"mainDashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WidgetText, {\n      title: \"Organic Source\",\n      value: this.state.organicSource,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(WidgetBar, {\n      title: \"Title\",\n      data: chartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WidgetDoughnut, {\n      title: \"Doughnut\",\n      data: chartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/alyshanmaredia/Desktop/dashboard/src/components/Dashboard.js"],"names":["React","Component","Row","Container","Col","ReactFC","FusionCharts","Column2D","FusionTheme","WidgetBar","WidgetDoughnut","Dropdown","WidgetText","fcRoot","config","apiKey","spreadsheetId","url","Dashboard","constructor","getData","arg","arr","state","items","arrLen","length","organicSource","directSource","selectedValue","newUsers","users","pageViews","referralSource","i","organic_source","direct_source","referral_source","page_views","new_users","setState","console","log","updateDashboard","event","value","dropdownOption","componentDidMount","fetch","then","response","json","data","batchRowValues","valueRanges","values","rows","rowObject","j","push","dropdownOptions","month","Array","from","Set","reverse","render","chartData","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAO,0BAAP;AAEAP,OAAO,CAACQ,MAAR,CAAeP,YAAf,EAA6BC,QAA7B,EAAuCC,WAAvC,E,CACA;;AACA,MAAMM,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,aAAa,EAAE;AAFF,CAAf;AAIA,MAAMC,GAAG,GAAI,iDAAgDH,MAAM,CAACE,aAAc,0DAAyDF,MAAM,CAACC,MAAO,EAAzJ;;AAEA,MAAMG,SAAN,SAAwBjB,SAAxB,CAAkC;AAChCkB,EAAAA,WAAW,GAAG;AACZ;;AADY,SAcdC,OAdc,GAcHC,GAAD,IAAS;AACjB,YAAMC,GAAG,GAAG,KAAKC,KAAL,CAAWC,KAAvB;AACA,YAAMC,MAAM,GAAGH,GAAG,CAACI,MAAnB;AACA,UAAIC,aAAa,GAAG,CAApB;AACA,UAAIC,YAAY,GAAG,CAAnB;AACA,UAAIC,aAAa,GAAG,IAApB;AACA,UAAIC,QAAQ,GAAG,CAAf;AACA,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIC,SAAS,GAAG,CAAhB;AACA,UAAIC,cAAc,GAAG,CAArB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,MAApB,EAA4BS,CAAC,EAA7B,EAAiC;AAC/B,YAAIb,GAAG,IAAIC,GAAG,CAACY,CAAD,CAAH,CAAO,OAAP,CAAX,EAA4B;AAC1BP,UAAAA,aAAa,GAAGL,GAAG,CAACY,CAAD,CAAH,CAAOC,cAAvB;AACAP,UAAAA,YAAY,GAAGN,GAAG,CAACY,CAAD,CAAH,CAAOE,aAAtB;AACAH,UAAAA,cAAc,GAAGX,GAAG,CAACY,CAAD,CAAH,CAAOG,eAAxB;AACAL,UAAAA,SAAS,GAAGV,GAAG,CAACY,CAAD,CAAH,CAAOI,UAAnB;AACAP,UAAAA,KAAK,GAAGT,GAAG,CAACY,CAAD,CAAH,CAAOH,KAAf;AACAD,UAAAA,QAAQ,GAAGR,GAAG,CAACY,CAAD,CAAH,CAAOK,SAAlB;AACD;AACF;;AACDV,MAAAA,aAAa,GAAGR,GAAhB;AACA,WAAKmB,QAAL,CACE;AACEb,QAAAA,aAAa,EAAEA,aADjB;AAEEC,QAAAA,YAAY,EAAEA,YAFhB;AAGEK,QAAAA,cAAc,EAAEA,cAHlB;AAIED,QAAAA,SAAS,EAAEA,SAJb;AAKED,QAAAA,KAAK,EAAEA,KALT;AAMED,QAAAA,QAAQ,EAAEA;AANZ,OADF,EASE,MAAM;AACJW,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWI,aAAvB;AACD,OAXH;AAaD,KAjDa;;AAAA,SAkDdgB,eAlDc,GAkDKC,KAAD,IAAW;AAC3B,WAAKxB,OAAL,CAAawB,KAAK,CAACC,KAAnB;AACA,WAAKL,QAAL,CAAc;AAAEX,QAAAA,aAAa,EAAEe,KAAK,CAACC;AAAvB,OAAd,EAA8C,MAAM;AAClDJ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWI,aAAvB;AACD,OAFD;AAGD,KAvDa;;AAEZ,SAAKJ,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXsB,MAAAA,cAAc,EAAE,EAFL;AAGXjB,MAAAA,aAAa,EAAE,IAHJ;AAIXF,MAAAA,aAAa,EAAE,IAJJ;AAKXC,MAAAA,YAAY,EAAE,IALH;AAMXK,MAAAA,cAAc,EAAE,IANL;AAOXD,MAAAA,SAAS,EAAE,IAPA;AAQXD,MAAAA,KAAK,EAAE,IARI;AASXD,MAAAA,QAAQ,EAAE;AATC,KAAb;AAWD;;AA2CDiB,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC/B,GAAD,CAAL,CACGgC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,UAAIC,cAAc,GAAGD,IAAI,CAACE,WAAL,CAAiB,CAAjB,EAAoBC,MAAzC;AAEA,YAAMC,IAAI,GAAG,EAAb;;AAEA,WAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,cAAc,CAAC3B,MAAnC,EAA2CQ,CAAC,EAA5C,EAAgD;AAC9C,YAAIuB,SAAS,GAAG,EAAhB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,cAAc,CAACnB,CAAD,CAAd,CAAkBR,MAAtC,EAA8CgC,CAAC,EAA/C,EAAmD;AACjDD,UAAAA,SAAS,CAACJ,cAAc,CAAC,CAAD,CAAd,CAAkBK,CAAlB,CAAD,CAAT,GAAkCL,cAAc,CAACnB,CAAD,CAAd,CAAkBwB,CAAlB,CAAlC;AACD;;AACDF,QAAAA,IAAI,CAACG,IAAL,CAAUF,SAAV;AACD,OAXa,CAad;;;AACA,UAAIG,eAAe,GAAG,EAAtB;;AAEA,WAAK,IAAI1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsB,IAAI,CAAC9B,MAAzB,EAAiCQ,CAAC,EAAlC,EAAsC;AACpC0B,QAAAA,eAAe,CAACD,IAAhB,CAAqBH,IAAI,CAACtB,CAAD,CAAJ,CAAQ2B,KAA7B;AACD;;AACDD,MAAAA,eAAe,GAAGE,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQJ,eAAR,CAAX,EAAqCK,OAArC,EAAlB;AACA,WAAKzB,QAAL,CACE;AACEhB,QAAAA,KAAK,EAAEgC,IADT;AAEEI,QAAAA,eAAe,EAAEA,eAFnB;AAGE/B,QAAAA,aAAa,EAAE;AAHjB,OADF,EAME,MAAM,KAAKT,OAAL,CAAa,UAAb,CANR;AAQD,KA9BH;AA+BD;;AACD8C,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,CAChB;AACEC,MAAAA,KAAK,EAAE,WADT;AAEEvB,MAAAA,KAAK,EAAE;AAFT,KADgB,EAKhB;AACEuB,MAAAA,KAAK,EAAE,OADT;AAEEvB,MAAAA,KAAK,EAAE;AAFT,KALgB,CAAlB;AAWA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWqC,eADtB;AAEE,MAAA,QAAQ,EAAE,KAAKjB,eAFjB;AAGE,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWM,aAHpB;AAIE,MAAA,WAAW,EAAC,kBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF,CADF,eAcE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAC,gBADR;AAEE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWI,aAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAQE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eASE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CAdF,eA2BE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAyB,MAAA,IAAI,EAAEwC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,eA4BE,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAC,UAAtB;AAAiC,MAAA,IAAI,EAAEA,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,CADF;AAgCD;;AAtI+B;;AAyIlC,eAAejD,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport WidgetBar from \"./WidgetBar\";\nimport WidgetDoughnut from \"./WidgetDoughnut\";\nimport Dropdown from \"react-dropdown\";\nimport WidgetText from \"./WidgetText\";\n\nimport \"react-dropdown/style.css\";\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n//excel import\nconst config = {\n  apiKey: \"AIzaSyDMu-Vw30ykPPmFT3cXeunzKEi4EahzglI\",\n  spreadsheetId: \"1vcDPrMexD8bxNwwzK9IxF8wch6Hfezq2eooJACDiqgg\",\n};\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      dropdownOption: [],\n      selectedValue: null,\n      organicSource: null,\n      directSource: null,\n      referralSource: null,\n      pageViews: null,\n      users: null,\n      newUsers: null,\n    };\n  }\n  getData = (arg) => {\n    const arr = this.state.items;\n    const arrLen = arr.length;\n    let organicSource = 0;\n    let directSource = 0;\n    let selectedValue = null;\n    let newUsers = 0;\n    let users = 0;\n    let pageViews = 0;\n    let referralSource = 0;\n\n    for (let i = 0; i < arrLen; i++) {\n      if (arg == arr[i][\"month\"]) {\n        organicSource = arr[i].organic_source;\n        directSource = arr[i].direct_source;\n        referralSource = arr[i].referral_source;\n        pageViews = arr[i].page_views;\n        users = arr[i].users;\n        newUsers = arr[i].new_users;\n      }\n    }\n    selectedValue = arg;\n    this.setState(\n      {\n        organicSource: organicSource,\n        directSource: directSource,\n        referralSource: referralSource,\n        pageViews: pageViews,\n        users: users,\n        newUsers: newUsers,\n      },\n      () => {\n        console.log(this.state.organicSource);\n      }\n    );\n  };\n  updateDashboard = (event) => {\n    this.getData(event.value);\n    this.setState({ selectedValue: event.value }, () => {\n      console.log(this.state.organicSource);\n    });\n  };\n  componentDidMount() {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        let batchRowValues = data.valueRanges[0].values;\n\n        const rows = [];\n\n        for (let i = 1; i < batchRowValues.length; i++) {\n          let rowObject = {};\n          for (let j = 0; j < batchRowValues[i].length; j++) {\n            rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n          }\n          rows.push(rowObject);\n        }\n\n        //dropdown options\n        let dropdownOptions = [];\n\n        for (let i = 0; i < rows.length; i++) {\n          dropdownOptions.push(rows[i].month);\n        }\n        dropdownOptions = Array.from(new Set(dropdownOptions)).reverse();\n        this.setState(\n          {\n            items: rows,\n            dropdownOptions: dropdownOptions,\n            selectedValue: \"Jan 2018\",\n          },\n          () => this.getData(\"Jan 2018\")\n        );\n      });\n  }\n  render() {\n    const chartData = [\n      {\n        label: \"Venezuela\",\n        value: \"290\",\n      },\n      {\n        label: \"Saudi\",\n        value: \"260\",\n      },\n    ];\n\n    return (\n      <div>\n        <Container fluid>\n          <Row className=\"TopHeader\">\n            <Col>Dashboard</Col>\n            <Col>\n              <Dropdown\n                options={this.state.dropdownOptions}\n                onChange={this.updateDashboard}\n                value={this.state.selectedValue}\n                placeholder=\"Select an option\"\n              />\n            </Col>\n          </Row>\n        </Container>\n        <Container>\n          <Row className=\"mainDashboard\">\n            <Col>\n              <WidgetText\n                title=\"Organic Source\"\n                value={this.state.organicSource}\n              />\n            </Col>\n            <Col></Col>\n            <Col></Col>\n            <Col></Col>\n          </Row>\n        </Container>\n        <WidgetBar title=\"Title\" data={chartData} />\n        <WidgetDoughnut title=\"Doughnut\" data={chartData} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}