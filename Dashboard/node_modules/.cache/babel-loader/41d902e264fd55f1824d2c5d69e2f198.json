{"ast":null,"code":"var _jsxFileName = \"/home/alyshanmaredia/Desktop/dashboard/src/components/Chart.js\";\nimport React from 'react';\nimport ReactFC from 'react-fusioncharts';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nfunction Chart() {\n  // Preparing the chart data\n  const chartData = [{\n    label: \"Venezuela\",\n    value: \"290\"\n  }, {\n    label: \"Saudi\",\n    value: \"260\"\n  }, {\n    label: \"Canada\",\n    value: \"180\"\n  }, {\n    label: \"Iran\",\n    value: \"140\"\n  }, {\n    label: \"Russia\",\n    value: \"115\"\n  }, {\n    label: \"UAE\",\n    value: \"100\"\n  }, {\n    label: \"US\",\n    value: \"30\"\n  }, {\n    label: \"China\",\n    value: \"30\"\n  }]; // Create a JSON object to store the chart configurations\n\n  const chartConfigs = {\n    type: \"column3d\",\n    // The chart type\n    width: \"700\",\n    // Width of the chart\n    height: \"400\",\n    // Height of the chart\n    dataFormat: \"json\",\n    // Data type\n    dataSource: {\n      // Chart Configuration\n      chart: {\n        caption: \"Countries With Most Oil Reserves [2017-18]\",\n        //Set the chart caption\n        subCaption: \"In MMbbl = One Million barrels\",\n        //Set the chart subcaption\n        xAxisName: \"Country\",\n        //Set the x-axis name\n        yAxisName: \"Reserves (MMbbl)\",\n        //Set the y-axis name\n        numberSuffix: \"K\",\n        theme: \"fusion\" //Set the theme for your chart\n\n      },\n      // Chart Data - from step 2\n      data: chartData\n    }\n  };\n  return /*#__PURE__*/React.createElement(ReactFC, Object.assign({}, chartConfigs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default Chart;","map":{"version":3,"sources":["/home/alyshanmaredia/Desktop/dashboard/src/components/Chart.js"],"names":["React","ReactFC","FusionCharts","Column2D","FusionTheme","fcRoot","Chart","chartData","label","value","chartConfigs","type","width","height","dataFormat","dataSource","chart","caption","subCaption","xAxisName","yAxisName","numberSuffix","theme","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AAEAH,OAAO,CAACI,MAAR,CAAeH,YAAf,EAA6BC,QAA7B,EAAuCC,WAAvC;;AAGA,SAASE,KAAT,GAAiB;AACjB;AACA,QAAMC,SAAS,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADc,EAKd;AACED,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALc,EASd;AACED,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GATc,EAad;AACED,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAbc,EAiBd;AACED,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAjBc,EAqBd;AACED,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GArBc,EAyBd;AACED,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAzBc,EA6Bd;AACED,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GA7Bc,CAAlB,CAFiB,CAqCf;;AACF,QAAMC,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAE,UADW;AACC;AAClBC,IAAAA,KAAK,EAAE,KAFU;AAEH;AACdC,IAAAA,MAAM,EAAE,KAHS;AAGF;AACfC,IAAAA,UAAU,EAAE,MAJK;AAIG;AACpBC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,4CADJ;AACqD;AAC1DC,QAAAA,UAAU,EAAE,gCAFP;AAEqD;AAC1DC,QAAAA,SAAS,EAAE,SAHN;AAG2B;AAChCC,QAAAA,SAAS,EAAE,kBAJN;AAI2B;AAChCC,QAAAA,YAAY,EAAE,GALT;AAMLC,QAAAA,KAAK,EAAE,QANF,CAM2B;;AAN3B,OAFG;AAUV;AACAC,MAAAA,IAAI,EAAEhB;AAXI;AALK,GAArB;AAmBQ,sBAAQ,oBAAC,OAAD,oBAAaG,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;AAEP;;AAED,eAAeJ,KAAf","sourcesContent":["import React from 'react'\nimport ReactFC from 'react-fusioncharts'\nimport FusionCharts from 'fusioncharts'\nimport Column2D from \"fusioncharts/fusioncharts.charts\"\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\"\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\n\nfunction Chart() {\n// Preparing the chart data\nconst chartData = [\n    {\n      label: \"Venezuela\",\n      value: \"290\"\n    },\n    {\n      label: \"Saudi\",\n      value: \"260\"\n    },\n    {\n      label: \"Canada\",\n      value: \"180\"\n    },\n    {\n      label: \"Iran\",\n      value: \"140\"\n    },\n    {\n      label: \"Russia\",\n      value: \"115\"\n    },\n    {\n      label: \"UAE\",\n      value: \"100\"\n    },\n    {\n      label: \"US\",\n      value: \"30\"\n    },\n    {\n      label: \"China\",\n      value: \"30\"\n    }\n  ];\n\n  // Create a JSON object to store the chart configurations\nconst chartConfigs = {\n    type: \"column3d\", // The chart type\n    width: \"700\", // Width of the chart\n    height: \"400\", // Height of the chart\n    dataFormat: \"json\", // Data type\n    dataSource: {\n      // Chart Configuration\n      chart: {\n        caption: \"Countries With Most Oil Reserves [2017-18]\",    //Set the chart caption\n        subCaption: \"In MMbbl = One Million barrels\",             //Set the chart subcaption\n        xAxisName: \"Country\",           //Set the x-axis name\n        yAxisName: \"Reserves (MMbbl)\",  //Set the y-axis name\n        numberSuffix: \"K\",\n        theme: \"fusion\"                 //Set the theme for your chart\n      },\n      // Chart Data - from step 2\n      data: chartData\n    }\n  };    \n        return (<ReactFC {...chartConfigs} />);\n    \n}\n\nexport default Chart\n"]},"metadata":{},"sourceType":"module"}