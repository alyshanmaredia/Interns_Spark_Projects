{"ast":null,"code":"var _jsxFileName = \"/home/alyshanmaredia/Desktop/dashboard/src/components/Dashboard.js\";\nimport React, { Component } from 'react';\nimport './Dashboard.css';\nimport { Col, Row, Container } from 'react-bootstrap';\nimport WidgetText from './WidgetText';\nimport Chart from 'fusioncharts/fusioncharts.charts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nclass Dashboard extends Component {\n  render() {\n    // Preparing the chart data\n    const chartData = [{\n      label: \"Venezuela\",\n      value: \"290\"\n    }, {\n      label: \"Saudi\",\n      value: \"260\"\n    }, {\n      label: \"Canada\",\n      value: \"180\"\n    }, {\n      label: \"Iran\",\n      value: \"140\"\n    }, {\n      label: \"Russia\",\n      value: \"115\"\n    }, {\n      label: \"UAE\",\n      value: \"100\"\n    }, {\n      label: \"US\",\n      value: \"30\"\n    }, {\n      label: \"China\",\n      value: \"30\"\n    }]; // Create a JSON object to store the chart configurations\n\n    const chartConfigs = {\n      type: \"pie2d\",\n      // The chart type\n      width: \"700\",\n      // Width of the chart\n      height: \"400\",\n      // Height of the chart\n      dataFormat: \"json\",\n      // Data type\n      dataSource: {\n        // Chart Configuration\n        chart: {\n          caption: \"Countries With Most Oil Reserves [2017-18]\",\n          //Set the chart caption\n          subCaption: \"In MMbbl = One Million barrels\",\n          //Set the chart subcaption\n          xAxisName: \"Country\",\n          //Set the x-axis name\n          yAxisName: \"Reserves (MMbbl)\",\n          //Set the y-axis name\n          numberSuffix: \"K\",\n          theme: \"fusion\" //Set the theme for your chart\n\n        },\n        // Chart Data - from step 2\n        data: chartData\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactFC, Object.assign({}, chartConfigs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/alyshanmaredia/Desktop/dashboard/src/components/Dashboard.js"],"names":["React","Component","Col","Row","Container","WidgetText","Chart","FusionTheme","ReactFC","fcRoot","FusionCharts","Column2D","Dashboard","render","chartData","label","value","chartConfigs","type","width","height","dataFormat","dataSource","chart","caption","subCaption","xAxisName","yAxisName","numberSuffix","theme","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,SAAlB,QAAkC,iBAAlC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AAEAC,OAAO,CAACC,MAAR,CAAeC,YAAf,EAA6BC,QAA7B,EAAuCJ,WAAvC;;AAEA,MAAMK,SAAN,SAAwBX,SAAxB,CAAkC;AAM9BY,EAAAA,MAAM,GAAG;AACD;AACZ,UAAMC,SAAS,GAAG,CACd;AACEC,MAAAA,KAAK,EAAE,WADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADc,EAKd;AACED,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KALc,EASd;AACED,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KATc,EAad;AACED,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KAbc,EAiBd;AACED,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KAjBc,EAqBd;AACED,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KArBc,EAyBd;AACED,MAAAA,KAAK,EAAE,IADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KAzBc,EA6Bd;AACED,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KA7Bc,CAAlB,CAFa,CAsCH;;AACV,UAAMC,YAAY,GAAG;AACjBC,MAAAA,IAAI,EAAE,OADW;AACF;AACfC,MAAAA,KAAK,EAAE,KAFU;AAEH;AACdC,MAAAA,MAAM,EAAE,KAHS;AAGF;AACfC,MAAAA,UAAU,EAAE,MAJK;AAIG;AACpBC,MAAAA,UAAU,EAAE;AACV;AACAC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,4CADJ;AACqD;AAC1DC,UAAAA,UAAU,EAAE,gCAFP;AAEqD;AAC1DC,UAAAA,SAAS,EAAE,SAHN;AAG2B;AAChCC,UAAAA,SAAS,EAAE,kBAJN;AAI2B;AAChCC,UAAAA,YAAY,EAAE,GALT;AAMLC,UAAAA,KAAK,EAAE,QANF,CAM2B;;AAN3B,SAFG;AAUV;AACAC,QAAAA,IAAI,EAAEhB;AAXI;AALK,KAArB;AAmBQ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD,oBAAaG,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ;AAMH;;AAtE6B;;AAyElC,eAAeL,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport './Dashboard.css';\nimport {Col, Row, Container} from 'react-bootstrap'\nimport WidgetText from './WidgetText'\nimport Chart from 'fusioncharts/fusioncharts.charts'\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nclass Dashboard extends Component {\n\n   \n        \n    \n\n    render() {\n            // Preparing the chart data\nconst chartData = [\n    {\n      label: \"Venezuela\",\n      value: \"290\"\n    },\n    {\n      label: \"Saudi\",\n      value: \"260\"\n    },\n    {\n      label: \"Canada\",\n      value: \"180\"\n    },\n    {\n      label: \"Iran\",\n      value: \"140\"\n    },\n    {\n      label: \"Russia\",\n      value: \"115\"\n    },\n    {\n      label: \"UAE\",\n      value: \"100\"\n    },\n    {\n      label: \"US\",\n      value: \"30\"\n    },\n    {\n      label: \"China\",\n      value: \"30\"\n    }\n  ];\n\n\n          // Create a JSON object to store the chart configurations\nconst chartConfigs = {\n    type: \"pie2d\", // The chart type\n    width: \"700\", // Width of the chart\n    height: \"400\", // Height of the chart\n    dataFormat: \"json\", // Data type\n    dataSource: {\n      // Chart Configuration\n      chart: {\n        caption: \"Countries With Most Oil Reserves [2017-18]\",    //Set the chart caption\n        subCaption: \"In MMbbl = One Million barrels\",             //Set the chart subcaption\n        xAxisName: \"Country\",           //Set the x-axis name\n        yAxisName: \"Reserves (MMbbl)\",  //Set the y-axis name\n        numberSuffix: \"K\",\n        theme: \"fusion\"                 //Set the theme for your chart\n      },\n      // Chart Data - from step 2\n      data: chartData\n    }\n};\n        return (\n            <div>\n                <ReactFC {...chartConfigs} />\n                \n            </div>\n        )\n    }\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}