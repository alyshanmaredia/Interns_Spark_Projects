{"ast":null,"code":"var _jsxFileName = \"/home/alyshanmaredia/Desktop/dashboard/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport WidgetBar from \"./WidgetBar\";\nimport WidgetDoughnut from \"./WidgetDoughnut\";\nimport Dropdown from \"react-dropdown\";\nimport WidgetText from \"./WidgetText\";\nimport \"react-dropdown/style.css\";\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme); //excel import\n\nconst config = {\n  apiKey: \"AIzaSyDMu-Vw30ykPPmFT3cXeunzKEi4EahzglI\",\n  spreadsheetId: \"1vcDPrMexD8bxNwwzK9IxF8wch6Hfezq2eooJACDiqgg\"\n};\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n\n    this.getData = arg => {\n      const arr = this.state.items;\n      const arrLen = arr.length;\n      let organicSource = 0;\n      let directSource = 0;\n      let selectedValue = null;\n      let newUsers = 0;\n      let users = 0;\n      let pageViews = 0;\n      let referralSource = 0;\n      let sourceArr = [];\n\n      for (let i = 0; i < arrLen; i++) {\n        if (arg == arr[i][\"month\"]) {\n          organicSource = arr[i].organic_source;\n          directSource = arr[i].direct_source;\n          referralSource = arr[i].referral_source;\n          pageViews = arr[i].page_views;\n          users = arr[i].users;\n          newUsers = arr[i].new_users;\n          sourceArr.push({\n            label: \"Organic Source\",\n            value: arr[i].organic_source\n          }, {\n            label: \"Direct Source\",\n            value: arr[i].direct_source\n          }, {\n            label: \"Referral Source\",\n            value: arr[i].referral_source\n          });\n        }\n      }\n\n      selectedValue = arg;\n      this.setState({\n        organicSource: organicSource,\n        directSource: directSource,\n        referralSource: referralSource,\n        pageViews: pageViews,\n        users: users,\n        newUsers: newUsers,\n        sourceArr: sourceArr\n      }, () => {\n        console.log(this.state.organicSource);\n      });\n    };\n\n    this.updateDashboard = event => {\n      this.getData(event.value);\n      this.setState({\n        selectedValue: event.value\n      }, () => {\n        console.log(this.state.organicSource);\n      });\n    };\n\n    this.state = {\n      items: [],\n      dropdownOption: [],\n      selectedValue: null,\n      organicSource: null,\n      directSource: null,\n      referralSource: null,\n      pageViews: null,\n      users: null,\n      newUsers: null,\n      sourceArr: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(url).then(response => response.json()).then(data => {\n      let batchRowValues = data.valueRanges[0].values;\n      const rows = [];\n\n      for (let i = 1; i < batchRowValues.length; i++) {\n        let rowObject = {};\n\n        for (let j = 0; j < batchRowValues[i].length; j++) {\n          rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n        }\n\n        rows.push(rowObject);\n      } //dropdown options\n\n\n      let dropdownOptions = [];\n\n      for (let i = 0; i < rows.length; i++) {\n        dropdownOptions.push(rows[i].month);\n      }\n\n      dropdownOptions = Array.from(new Set(dropdownOptions)).reverse();\n      this.setState({\n        items: rows,\n        dropdownOptions: dropdownOptions,\n        selectedValue: \"Jan 2018\"\n      }, () => this.getData(\"Jan 2018\"));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"TopHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Dashboard\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      options: this.state.dropdownOptions,\n      onChange: this.updateDashboard,\n      value: this.state.selectedValue,\n      placeholder: \"Select an option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"mainDashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WidgetText, {\n      title: \"Organic Source\",\n      value: this.state.organicSource,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WidgetText, {\n      title: \"Direct Source\",\n      value: this.state.directSource,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WidgetText, {\n      title: \"Referral Source\",\n      value: this.state.referralSource,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WidgetText, {\n      title: \"Users\",\n      value: this.state.users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WidgetText, {\n      title: \"New Users\",\n      value: this.state.newUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WidgetBar, {\n      title: \"Source Comparison\",\n      data: this.state.sourceArr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WidgetDoughnut, {\n      title: \"Doughnut\",\n      data: this.state.sourceArr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/alyshanmaredia/Desktop/dashboard/src/components/Dashboard.js"],"names":["React","Component","Row","Container","Col","ReactFC","FusionCharts","Column2D","FusionTheme","WidgetBar","WidgetDoughnut","Dropdown","WidgetText","fcRoot","config","apiKey","spreadsheetId","url","Dashboard","constructor","getData","arg","arr","state","items","arrLen","length","organicSource","directSource","selectedValue","newUsers","users","pageViews","referralSource","sourceArr","i","organic_source","direct_source","referral_source","page_views","new_users","push","label","value","setState","console","log","updateDashboard","event","dropdownOption","componentDidMount","fetch","then","response","json","data","batchRowValues","valueRanges","values","rows","rowObject","j","dropdownOptions","month","Array","from","Set","reverse","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport WidgetBar from \"./WidgetBar\";\nimport WidgetDoughnut from \"./WidgetDoughnut\";\nimport Dropdown from \"react-dropdown\";\nimport WidgetText from \"./WidgetText\";\n\nimport \"react-dropdown/style.css\";\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n//excel import\nconst config = {\n  apiKey: \"AIzaSyDMu-Vw30ykPPmFT3cXeunzKEi4EahzglI\",\n  spreadsheetId: \"1vcDPrMexD8bxNwwzK9IxF8wch6Hfezq2eooJACDiqgg\",\n};\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      dropdownOption: [],\n      selectedValue: null,\n      organicSource: null,\n      directSource: null,\n      referralSource: null,\n      pageViews: null,\n      users: null,\n      newUsers: null,\n      sourceArr: [],\n    };\n  }\n  getData = (arg) => {\n    const arr = this.state.items;\n    const arrLen = arr.length;\n    let organicSource = 0;\n    let directSource = 0;\n    let selectedValue = null;\n    let newUsers = 0;\n    let users = 0;\n    let pageViews = 0;\n    let referralSource = 0;\n    let sourceArr = [];\n\n    for (let i = 0; i < arrLen; i++) {\n      if (arg == arr[i][\"month\"]) {\n        organicSource = arr[i].organic_source;\n        directSource = arr[i].direct_source;\n        referralSource = arr[i].referral_source;\n        pageViews = arr[i].page_views;\n        users = arr[i].users;\n        newUsers = arr[i].new_users;\n        sourceArr.push(\n          {\n            label: \"Organic Source\",\n            value: arr[i].organic_source,\n          },\n          {\n            label: \"Direct Source\",\n            value: arr[i].direct_source,\n          },\n          {\n            label: \"Referral Source\",\n            value: arr[i].referral_source,\n          }\n        );\n      }\n    }\n    selectedValue = arg;\n    this.setState(\n      {\n        organicSource: organicSource,\n        directSource: directSource,\n        referralSource: referralSource,\n        pageViews: pageViews,\n        users: users,\n        newUsers: newUsers,\n        sourceArr: sourceArr,\n      },\n      () => {\n        console.log(this.state.organicSource);\n      }\n    );\n  };\n  updateDashboard = (event) => {\n    this.getData(event.value);\n    this.setState({ selectedValue: event.value }, () => {\n      console.log(this.state.organicSource);\n    });\n  };\n  componentDidMount() {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        let batchRowValues = data.valueRanges[0].values;\n\n        const rows = [];\n\n        for (let i = 1; i < batchRowValues.length; i++) {\n          let rowObject = {};\n          for (let j = 0; j < batchRowValues[i].length; j++) {\n            rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n          }\n          rows.push(rowObject);\n        }\n\n        //dropdown options\n        let dropdownOptions = [];\n\n        for (let i = 0; i < rows.length; i++) {\n          dropdownOptions.push(rows[i].month);\n        }\n        dropdownOptions = Array.from(new Set(dropdownOptions)).reverse();\n        this.setState(\n          {\n            items: rows,\n            dropdownOptions: dropdownOptions,\n            selectedValue: \"Jan 2018\",\n          },\n          () => this.getData(\"Jan 2018\")\n        );\n      });\n  }\n  render() {\n    return (\n      <div>\n        <Container fluid>\n          <Row className=\"TopHeader\">\n            <Col>Dashboard</Col>\n            <Col>\n              <Dropdown\n                options={this.state.dropdownOptions}\n                onChange={this.updateDashboard}\n                value={this.state.selectedValue}\n                placeholder=\"Select an option\"\n              />\n            </Col>\n          </Row>\n        </Container>\n        <Container>\n          <Row className=\"mainDashboard\">\n            <Col>\n              <WidgetText\n                title=\"Organic Source\"\n                value={this.state.organicSource}\n              />\n            </Col>\n            <Col>\n              <WidgetText\n                title=\"Direct Source\"\n                value={this.state.directSource}\n              />\n            </Col>\n            <Col>\n              <WidgetText\n                title=\"Referral Source\"\n                value={this.state.referralSource}\n              />\n            </Col>\n            <Col>\n              <WidgetText title=\"Users\" value={this.state.users} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <WidgetText title=\"New Users\" value={this.state.newUsers} />\n            </Col>\n            <Col>\n              <WidgetBar\n                title=\"Source Comparison\"\n                data={this.state.sourceArr}\n              />\n            </Col>\n            <Col>\n              <WidgetDoughnut title=\"Doughnut\" data={this.state.sourceArr} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}